{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","ChatHeading","styled","h1","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOutButton","button","SignOut","currentUser","signOut","SendButton","SendForm","form","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","displayName","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","props","messageClass","style","position","color","src","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2d5967d.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./App.css\";\n\nimport styled from \"styled-components\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDGrzWXvQ4hWwVno1rNS4Bo7w41ztH3Y3g\",\n  authDomain: \"trxsh-gang.firebaseapp.com\",\n  projectId: \"trxsh-gang\",\n  storageBucket: \"trxsh-gang.appspot.com\",\n  messagingSenderId: \"834428520261\",\n  appId: \"1:834428520261:web:3bf9369ca9d31075f2602c\",\n  measurementId: \"G-S3883CCYNF\",\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nconst ChatHeading = styled.h1`\n  @media only screen and (max-width: 480px) {\n    font-size: 20px;\n  }\n`;\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  return (\n    <div className=\"App\">\n      <header>\n        <img src=\"https://upload.wikimedia.org/wikipedia/commons/2/23/Lil-Peep_PrettyPuke_Photoshoot.png\" />\n        <ChatHeading>trxsh gang</ChatHeading>\n        <SignOut />\n      </header>\n\n      <section>{user ? <ChatRoom /> : <SignIn />}</section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return (\n    <button className=\"sign-in\" onClick={signInWithGoogle}>\n      Sign in with Google\n    </button>\n  );\n}\n\nconst SignOutButton = styled.button`\n  @media only screen and (max-width: 480px) {\n    width: 90px;\n    height 60;\n    font-size: 15px;\n  }\n`;\n\nfunction SignOut() {\n  return (\n    auth.currentUser && (\n      <SignOutButton className=\"sign-out\" onClick={() => auth.signOut()}>\n        Sign Out\n      </SignOutButton>\n    )\n  );\n}\n\nconst SendButton = styled.button`\n  @media only screen and (max-width: 480px) {\n    height: 60px;\n    width: 90px;\n  }\n`;\n\nconst SendForm = styled.form`\n  @media only screen and (max-width: 480px) {\n    height: 60px;\n  }\n`;\n\nfunction ChatRoom() {\n  const dummy = useRef();\n\n  const messagesRef = firestore.collection(\"messages\");\n  const query = messagesRef.orderBy(\"createdAt\").limit(25);\n\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL, displayName } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      displayName,\n    });\n\n    setFormValue(\"\");\n    dummy.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  return (\n    <>\n      <main>\n        {messages &&\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\n\n        <span ref={dummy}></span>\n      </main>\n\n      <SendForm onSubmit={sendMessage}>\n        <input\n          value={formValue}\n          onChange={(e) => setFormValue(e.target.value)}\n          placeholder=\"Send your message!\"\n        />\n\n        <SendButton type=\"submit\" disabled={!formValue}>\n          ðŸ–¤\n        </SendButton>\n      </SendForm>\n\n      <div></div>\n    </>\n  );\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL, displayName } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? \"sent\" : \"received\";\n\n  return (\n    <div className={`message ${messageClass}`}>\n      <span\n        style={{\n          position: \"absolute\",\n          \"margin-bottom\": \"70px\",\n          \"margin-right\": \"5px\",\n          \"margin-left\": \"5px\",\n          color: \"#5A5A5A\",\n          \"font-size\": \"12px\",\n        }}\n      >\n        {displayName}\n      </span>\n      <img src={photoURL} />\n      <p>{text}</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}